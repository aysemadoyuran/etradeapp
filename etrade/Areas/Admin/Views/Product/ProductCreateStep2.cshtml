@model ProductCreateStep2ViewModel

@{
    ViewData["Title"] = "Ürün Renk ve Fotoğraf Ekleme";
}

<div class="container py-4">
    <!-- Alert Mesajları -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show rounded-3 shadow-sm" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-exclamation-circle me-2"></i>
                <div>@TempData["ErrorMessage"]</div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show rounded-3 shadow-sm" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-check-circle me-2"></i>
                <div>@TempData["SuccessMessage"]</div>
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Başlık ve İlerleme Butonu -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h3 class="fw-semibold mb-0">
                <span class="badge bg-primary me-2">2</span>
                Ürün Renk ve Fotoğraf Ekleme
            </h3>
            <p class="text-muted mb-0">Ürününüz için renk seçenekleri ve fotoğraflar ekleyin</p>
        </div>
        <form method="post" asp-action="Step3" asp-controller="Product" class="ms-3">
            <input type="hidden" name="productId" value="@Model.ProductId" />
            <button type="submit" class="btn btn-outline-primary px-4 py-2">
                Devam Et <i class="fas fa-arrow-right ms-2"></i>
            </button>
        </form>
    </div>

    <div class="row g-4">
        <!-- Renk ve Fotoğraf Ekleme Formu -->
        <div class="col-lg-5">
            <div class="card border-0 shadow-sm rounded-3">
                <div class="card-body p-4">
                    <h5 class="card-title mb-4 fw-semibold">
                        <i class="fas fa-palette text-primary me-2"></i>Yeni Renk Ekle
                    </h5>
                    
                    <form method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                        <input type="hidden" name="ProductId" value="@Model.ProductId" />
                        
                        <div class="mb-4">
                            <label for="ColorId" class="form-label fw-medium">Renk Seçin</label>
                            <select id="ColorId" name="Colors[0].ColorId" class="form-select" required>
                                <option value="" selected disabled>Renk seçiniz...</option>
                                @foreach (var color in JsonConvert.DeserializeObject<List<Color>>(ViewBag.Colors.ToString()))
                                {
                                    <option value="@color.Id">@color.Name</option>
                                }
                            </select>
                            <div class="invalid-feedback">Lütfen bir renk seçiniz</div>
                        </div>
                        
                        <div class="mb-4">
                            <label for="Photos" class="form-label fw-medium">Fotoğraflar</label>
                            <input type="file" name="Colors[0].Photos" class="form-control" multiple required />
                            <div class="form-text">Birden fazla fotoğraf seçebilirsiniz</div>
                            <div class="invalid-feedback">Lütfen en az bir fotoğraf seçiniz</div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary w-100 py-2">
                            <i class="fas fa-save me-2"></i>Kaydet
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Renk Listesi -->
        <div class="col-lg-7">
            <div class="card border-0 shadow-sm rounded-3 h-100">
                <div class="card-body p-4">
                    <h5 class="card-title mb-4 fw-semibold">
                        <i class="fas fa-list text-primary me-2"></i>Eklenen Renkler
                    </h5>
                    @await Component.InvokeAsync("ColorList", new { productId = Model.ProductId })
                </div>
            </div>
        </div>
    </div>
</div>


    <style>
        .card {
            transition: all 0.3s ease;
            border: 1px solid rgba(0, 0, 0, 0.08);
        }
        
        .card:hover {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }
        
        .form-select, .form-control {
            padding: 0.75rem 1rem;
            border-radius: 8px;
            border: 1px solid #e0e0e0;
        }
        
        .form-select:focus, .form-control:focus {
            border-color: #7367f0;
            box-shadow: 0 0 0 0.25rem rgba(115, 103, 240, 0.25);
        }
        
        .btn-outline-primary {
            border-width: 2px;
            font-weight: 500;
        }
        
        .btn-primary {
            background-color: #7367f0;
            border-color: #7367f0;
            font-weight: 500;
            letter-spacing: 0.5px;
        }
        
        .btn-primary:hover {
            background-color: #5d50e6;
            border-color: #5d50e6;
            transform: translateY(-1px);
        }
        
        .invalid-feedback {
            font-size: 0.85rem;
        }
        
        .alert {
            border-radius: 8px;
        }
    </style>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
    <script>
        // Form validation
        (function () {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })();
        
        // Alert kapatma
        $(document).ready(function () {
            $(".alert").on("click", ".close", function () {
                $(this).closest(".alert").fadeOut();
            });
        });
    </script>
}