@model ProductCreateStep3ViewModel

@{
    ViewData["Title"] = "Ürün Rengine Göre Beden ve Stok Girişi";
}

<div class="container-fluid px-4 py-4">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-5">
        <div>
            <h2 class="fw-light mb-1">Ürün Oluşturma</h2>
            <h4 class="text-muted fw-normal">Son Aşama: Stok Yönetimi</h4>
        </div>
        <form method="post" asp-action="CompleteProduct" asp-controller="Product" class="d-inline">
            <input type="hidden" name="productId" value="@Model.ProductId" />
            <button type="submit" class="btn btn-success px-4 py-2">
                <i class="fas fa-check-circle me-2"></i>Ürünü Tamamla
            </button>
        </form>
    </div>

    <!-- Alerts -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row g-4">
        <!-- Form Section -->
        <div class="col-lg-7">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <h5 class="card-title text-primary mb-4">
                        <i class="fas fa-palette me-2"></i>Stok Bilgileri Ekle
                    </h5>
                    
                    <form method="post" asp-action="ProductCreateStep3" asp-controller="Product" class="needs-validation" novalidate>
                        <input type="hidden" name="ProductId" value="@Model.ProductId" />

                        <!-- Color Selection -->
                        <div class="mb-4">
                            <label for="ColorId" class="form-label">Renk</label>
                            <select name="SelectedColorId" class="form-select form-select-lg" required>
                                <option value="" selected disabled>Renk seçiniz</option>
                                @foreach (var color in ViewBag.Colors as List<SelectListItem>)
                                {
                                    <option value="@color.Value">@color.Text</option>
                                }
                            </select>
                            <div class="invalid-feedback">Lütfen bir renk seçiniz.</div>
                        </div>

                        <!-- Size Selection -->
                        <div class="mb-4">
                            <label for="Size" class="form-label">Beden</label>
                            <select name="SelectedSize" class="form-select form-select-lg" required>
                                <option value="" selected disabled>Beden seçiniz</option>
                                @foreach (var size in ViewBag.Sizes as List<SelectListItem>)
                                {
                                    <option value="@size.Value">@size.Text</option>
                                }
                            </select>
                            <div class="invalid-feedback">Lütfen bir beden seçiniz.</div>
                        </div>

                        <!-- Stock Quantity -->
                        <div class="mb-4">
                            <label for="Stock" class="form-label">Stok Miktarı</label>
                            <input type="number" name="Stock" class="form-control form-control-lg" 
                                   value="@Model.Stock" min="1" required />
                            <div class="invalid-feedback">Lütfen geçerli bir stok miktarı giriniz.</div>
                        </div>

                        <button type="submit" class="btn btn-primary btn-lg w-100 py-2">
                            <i class="fas fa-save me-2"></i>Kaydet
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Stock List Section -->
        <div class="col-lg-5">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <h5 class="card-title text-primary mb-4">
                        <i class="fas fa-list-ol me-2"></i>Mevcut Stoklar
                    </h5>
                    <div class="table-responsive">
                        @await Component.InvokeAsync("StockList", new { productId = Model.ProductId })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}